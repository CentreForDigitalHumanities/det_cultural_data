{
  "hash": "f5940d33e13f06c83dbd9e633b99f395",
  "result": {
    "markdown": "---\ntitle: \"Reading data\"\nexecute:   \n  enabled: true\n  error: true\n  freeze: auto\n---\n\n\n\nThe first thing we need to do is loading the data. This means opening the file where the data is currently stored and transfer that data here, in our working environment. As we are working with Python in this Jupyter notebook environment, this means transfering all the data into a Python object. Which object? There are Python libraries (Python code written by other developers) that have been specifically designed to perform the task of data analysis. One of these libraries, or (\"Pythonically\" speaking) **packages**, is called ```pandas```. We will use one of the many ```pandas``` functions to read our ```.csv``` (coma separated values file) file and we will store the information into a pandas ```DataFrame```. \n\n::: {.cell execution_count=2}\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<style><style>.box {\n\tborder: 1px solid;\n    border-radius: 5px;\n\tpadding: 10px;\n\tmargin: 0px 10px 0px 10px;\n}\n\n.sub-box {\n  display: flex; \n  flex-direction: row; \n  align-items: center;\n}\n\n.code {\n\tbackground: #ececec; \n}\n\n.pre {\n\tbackground: #ececec; \n}\n\n.type1 {\n\tborder-color: black;\n\tbackground-color: rgb(246, 255, 222); \n}\n\n.type2 {\n\tborder-color: black;\n\tbackground-color: rgb(227, 242, 193); \n}\n\n.type3 {\n\tborder-color: black;\n\tbackground-color: rgb(201, 219, 178); \n}\n\n.type4 {\n\tborder-color: black;\n\tbackground-color: rgb(170, 200, 167); \n}\n\n.type5 {\n    border-color: black;\n\tbackground-color: rgb(181, 192, 208);\n}\n\n.type6 {\n    border-color: black;\n\tbackground-color: rgb(255, 195, 116);\n}\n\n.picture {\n\twidth: 30px; \n\theight: 30px;\n\tmargin: 0 0 0px 0;\n}\n\n.ctitle {\n    margin: 0px 0px 0px 20px;\n}</style></style> \n            <div class=\"box type1\">\n                    <div class=\"sub-box\">\n                        <img src=\"myutils/icons/task.png\" alt=\"Icon\" class=\"picture\"/>\n                        <div class=\"ctitle\">\n                            <u><h4><strong>Task(s)</strong></h4></u>\n                        </div>\n                    </div>\n                    <div class=\"sub-box\">\n                        Loading data\n                    </div>\n            </div>\n        \n            <div class=\"box type2\">\n                <div class=\"sub-box\">\n                    <img src=\"myutils/icons/thinking.png\" alt=\"Icon\" class=\"picture\"/>\n                    <div class=\"ctitle\">\n                        <u><h4><strong>What to do?</strong></h4></u>\n                    </div>\n                </div>\n                <div class=\"sub-box\">\n                    <ul><li>Localise the csv file;</li><li>Have a look at it;</li><li>Transfer data to the Python working environment.</li></ul>\n                </div>\n            </div>    \n        \n            <div class=\"box type3\">\n                <div class=\"sub-box\">\n                    <img src=\"myutils/icons/tools.png\" alt=\"Icon\" class=\"picture\"/>\n                    <div class=\"ctitle\">\n                        <u><h4><strong>(Python) Tools</strong></h4></u>\n                    </div>\n                </div>\n                <div class=\"sub-box\">\n                    <ul><li><code>pandas</code> package;</li><li><code>pandas</code> method <code>.read_csv()</code>;</li><li>Python function <code>print()</code>;</li><li>Python function <code>type()</code></li></ul>\n                </div>            \n            </div>    \n        \n            <div class=\"box type4\">\n                <div class=\"sub-box\">\n                    <img src=\"myutils/icons/code_expl.png\" alt=\"Icon\" class=\"picture\"/>\n                    <div class=\"ctitle\">\n                        <u><h4><strong>Coding</strong></h4></u>\n                    </div>\n                </div>\n                <div class=\"sub-box\">\n                    <div>\n                        <ul><li><code>import pandas as pd</code>, we first import the package <code>pandas</code> in our working environment in order to use all its functionalities.     To make our life easier, we assign to the package an alias, a nickname, so that we do not neet to write     <code>pandas.function_to_use()</code> every time we need to use a <code>pandas</code> function. We need just to use     the abbreviated form <code>pd.function_to_use()</code>;</li><li><code>data_file = 'data/data.csv'</code>, we store the relative path of our data file as a string (between single     or double quotes) to the Python variable <code>data_file</code>;</li><li><code>df = pd.read_csv(data_file)</code>, we use the method <code>.read_csv()</code> to read     our data file and we store the result in the Python variable <code>df</code> (data frame);</li><li><code>print(type(df))</code>, we first apply the Python function <code>type()</code> to the just initialised variable     <code>df</code> to check what is its type. We print the result on the screen using the Python function     <code>print()</code>.</li></ul>\n                    </div>       \n                </div>\n            </div>    \n        \n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport pandas as pd\ndata_file = 'data/data.csv'\ndf = pd.read_csv(data_file)\nprint(type(df))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\n```\n:::\n:::\n\n\nWe managed to transfer our data into a Python object, specifically a ```pandas.core.frame.DataFrame```, or simply (from now on) a DataFrame. However, a lot of things can go wrong when going from one format to another, so it is a good idea to have a first look at the data.\n\n::: {.cell execution_count=4}\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<style><style>.box {\n\tborder: 1px solid;\n    border-radius: 5px;\n\tpadding: 10px;\n\tmargin: 0px 10px 0px 10px;\n}\n\n.sub-box {\n  display: flex; \n  flex-direction: row; \n  align-items: center;\n}\n\n.code {\n\tbackground: #ececec; \n}\n\n.pre {\n\tbackground: #ececec; \n}\n\n.type1 {\n\tborder-color: black;\n\tbackground-color: rgb(246, 255, 222); \n}\n\n.type2 {\n\tborder-color: black;\n\tbackground-color: rgb(227, 242, 193); \n}\n\n.type3 {\n\tborder-color: black;\n\tbackground-color: rgb(201, 219, 178); \n}\n\n.type4 {\n\tborder-color: black;\n\tbackground-color: rgb(170, 200, 167); \n}\n\n.type5 {\n    border-color: black;\n\tbackground-color: rgb(181, 192, 208);\n}\n\n.type6 {\n    border-color: black;\n\tbackground-color: rgb(255, 195, 116);\n}\n\n.picture {\n\twidth: 30px; \n\theight: 30px;\n\tmargin: 0 0 0px 0;\n}\n\n.ctitle {\n    margin: 0px 0px 0px 20px;\n}</style></style> \n            <div class=\"box type1\">\n                    <div class=\"sub-box\">\n                        <img src=\"myutils/icons/task.png\" alt=\"Icon\" class=\"picture\"/>\n                        <div class=\"ctitle\">\n                            <u><h4><strong>Task(s)</strong></h4></u>\n                        </div>\n                    </div>\n                    <div class=\"sub-box\">\n                        Have a first look at the data\n                    </div>\n            </div>\n        \n            <div class=\"box type2\">\n                <div class=\"sub-box\">\n                    <img src=\"myutils/icons/thinking.png\" alt=\"Icon\" class=\"picture\"/>\n                    <div class=\"ctitle\">\n                        <u><h4><strong>What to do?</strong></h4></u>\n                    </div>\n                </div>\n                <div class=\"sub-box\">\n                    Visualize the first 10 lines of data, just to check that everything looks \"ok\";\n                </div>\n            </div>    \n        \n            <div class=\"box type3\">\n                <div class=\"sub-box\">\n                    <img src=\"myutils/icons/tools.png\" alt=\"Icon\" class=\"picture\"/>\n                    <div class=\"ctitle\">\n                        <u><h4><strong>(Python) Tools</strong></h4></u>\n                    </div>\n                </div>\n                <div class=\"sub-box\">\n                    <code>pandas</code> method <code>.head()</code>;\n                </div>            \n            </div>    \n        \n            <div class=\"box type4\">\n                <div class=\"sub-box\">\n                    <img src=\"myutils/icons/code_expl.png\" alt=\"Icon\" class=\"picture\"/>\n                    <div class=\"ctitle\">\n                        <u><h4><strong>Coding</strong></h4></u>\n                    </div>\n                </div>\n                <div class=\"sub-box\">\n                    <div>\n                        <code>pd.head(10)</code>, calling the <code>head(10)</code> method on the DataFrame <code>df</code> we will visualise the first 10 lines of the DataFrame (we wrote 10, but you can use whatever number you want). This method, as a matter of fact, shows you only the \"head\", the beginning, of the DataFrame.\n                    </div>       \n                </div>\n            </div>    \n        \n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndf.head(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Year of arrival at port of disembarkation</th>\n      <th>Voyage ID</th>\n      <th>Vessel name</th>\n      <th>Voyage itinerary imputed port where began (ptdepimp) place</th>\n      <th>Voyage itinerary imputed principal place of slave purchase (mjbyptimp)</th>\n      <th>Voyage itinerary imputed principal port of slave disembarkation (mjslptimp) place</th>\n      <th>VOYAGEID2</th>\n      <th>Captives arrived at 1st port</th>\n      <th>Captain's name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1714.0</td>\n      <td>16109</td>\n      <td>Freeke Gally</td>\n      <td>Bristol</td>\n      <td>NaN</td>\n      <td>Kingston</td>\n      <td>NaN</td>\n      <td>283.0</td>\n      <td>Neale, Alexander</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1713.0</td>\n      <td>16110</td>\n      <td>Greyhound Gally</td>\n      <td>Bristol</td>\n      <td>NaN</td>\n      <td>Jamaica, place unspecified</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Selkirk, Alexander&lt;br/&gt; Forrest, Henry</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1714.0</td>\n      <td>16111</td>\n      <td>Jacob</td>\n      <td>Bristol</td>\n      <td>NaN</td>\n      <td>Kingston</td>\n      <td>NaN</td>\n      <td>130.0</td>\n      <td>Nicholls, Philip</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1714.0</td>\n      <td>16112</td>\n      <td>Jason Gally</td>\n      <td>Bristol</td>\n      <td>NaN</td>\n      <td>Port Royal</td>\n      <td>NaN</td>\n      <td>278.0</td>\n      <td>Plummer, John</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1713.0</td>\n      <td>16113</td>\n      <td>Lawford Gally</td>\n      <td>Bristol</td>\n      <td>Africa, port unspecified</td>\n      <td>Newcastle (Nevis)</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Stretton, Joseph</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1714.0</td>\n      <td>16114</td>\n      <td>Mercy Gally</td>\n      <td>Bristol</td>\n      <td>Africa, port unspecified</td>\n      <td>Barbados, place unspecified</td>\n      <td>NaN</td>\n      <td>190.0</td>\n      <td>Scott, John</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1714.0</td>\n      <td>16115</td>\n      <td>Mermaid Gally</td>\n      <td>Bristol</td>\n      <td>Cape Verde Islands</td>\n      <td>Kingston</td>\n      <td>NaN</td>\n      <td>72.0</td>\n      <td>Banbury, John&lt;br/&gt; Copinger, James</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1713.0</td>\n      <td>16116</td>\n      <td>Morning Star</td>\n      <td>Bristol</td>\n      <td>Africa, port unspecified</td>\n      <td>Charleston</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Poole, Nicholas</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1714.0</td>\n      <td>16117</td>\n      <td>Peterborough</td>\n      <td>Bristol</td>\n      <td>Africa, port unspecified</td>\n      <td>Barbados, place unspecified</td>\n      <td>NaN</td>\n      <td>200.0</td>\n      <td>Shawe, John&lt;br/&gt; Martin, Joseph</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1713.0</td>\n      <td>16118</td>\n      <td>Resolution</td>\n      <td>Bristol</td>\n      <td>Gold Coast, port unspecified</td>\n      <td>Barbados, place unspecified</td>\n      <td>NaN</td>\n      <td>255.0</td>\n      <td>Williams, Charles</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nComparing what we see here with our .csv file it seems that everything went well. We have the data organised in rows and columns. Each column has a name and each row and index. Looking at our data, some values are numbers, some are names and places, some contain htmlo tags, some are NaN. It is not time yet to run data analysis, after having loaded the data we still need to correctly interpret the information it contains, then we need to \"clean\" it, and after that, finally, we can proceed with some data analysis. This is just the beginning, but the best is yet to come!\n\n",
    "supporting": [
      "ch1_reading_data_files/figure-epub"
    ],
    "filters": [],
    "engineDependencies": {
      "jupyter": [
        {
          "jsWidgets": true,
          "jupyterWidgets": false,
          "htmlLibraries": []
        }
      ]
    }
  }
}